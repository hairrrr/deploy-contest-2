{"version":3,"sources":["component/TaskForm.js","component/Search.js","component/Sort.js","component/Control.js","component/TaskItem.js","component/TableView.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","props","onSubmitForm","event","onSave","state","onClear","onChangeDisplayForm","onChangeValue","name","target","value","setState","status","onUpdateWork","obj","id","workEdit","console","log","this","nextProps","onCanelWorkEdit","className","onClick","htmlFor","type","placeholder","onChange","Component","Search","onChangeFilter","onSearch","filterName","Sort","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","Control","TaskItem","work","stt","onChangeStatus","onDeleteWork","onEditWork","TableView","onFilter","filterStatus","elementItems","listWork","map","element","index","App","isDisplayForm","data","generateID","push","localStorage","setItem","JSON","stringify","i","splice","filter","parseInt","sortBy","sortType","sort","getItem","parse","Math","floor","random","toString","substring","s4","toLowerCase","indexOf","fil_1","fil_2","concat","a","b","elementTaskForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6828db58.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class TaskForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      status: false,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    console.log(\"calling1....\");\r\n    if (this.props.workEdit !== null)\r\n      this.setState({\r\n        name: this.props.workEdit.name,\r\n        status: this.props.workEdit.status,\r\n      });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(\"calling2....\");\r\n    console.log(nextProps.workEdit);\r\n    if (nextProps && nextProps.workEdit)\r\n      this.setState({\r\n        name: nextProps.workEdit.name,\r\n        status: nextProps.workEdit.status,\r\n      });\r\n    \r\n  }\r\n  onSubmitForm = (event) => {\r\n    // event.preventDefault();\r\n    this.props.onSave(this.state);\r\n\r\n    // clear state va close form;\r\n    this.onClear();\r\n    this.props.onChangeDisplayForm();\r\n  };\r\n\r\n  onChangeValue = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    if (name === \"status\") value = value === \"true\" ? true : false;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      status: false,\r\n    });\r\n  };\r\n\r\n  onUpdateWork = () =>{\r\n    var obj = this.state;\r\n    obj.id = this.props.workEdit.id;\r\n    this.props.onUpdateWork(obj);\r\n  }\r\n  \r\n  render() {\r\n    var {\r\n      onChangeDisplayForm,\r\n      workEdit,\r\n      onCanelWorkEdit,\r\n      \r\n    } = this.props;\r\n    console.log(\"TaskForm\");\r\n    return (\r\n      <div className=\"TaskForm\">\r\n        <div className=\"panel panel-warning\">\r\n          <div className=\"panel-heading\">\r\n            <h3 className=\"panel-title\">\r\n              {workEdit === null ? \"Add work\" : \"Edit work\"}\r\n              {/* Add work */}\r\n              <i\r\n                className=\"fa fa-times-circle fr\"\r\n                onClick={\r\n                  workEdit === null ? onChangeDisplayForm : onCanelWorkEdit\r\n                }\r\n              ></i>\r\n              <div className=\"clear\"></div>\r\n            </h3>\r\n          </div>\r\n          <div className=\"panel-body\">\r\n            <form >\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Name: </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  placeholder=\"Input work...\"\r\n                  onChange={this.onChangeValue}\r\n                  value={this.state.name}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Status: </label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  onChange={this.onChangeValue}\r\n                  value={this.state.status}\r\n                >\r\n                  <option value={false}>Hidden</option>\r\n                  <option value={true}>Active</option>\r\n                </select>\r\n              </div>\r\n              <br />\r\n              <div className=\"text-center\">\r\n                <button\r\n                  // type={workEdit === null ? \"submit\" : \"button\"}\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  onClick={workEdit === null ? this.onSubmitForm :this.onUpdateWork}\r\n                >\r\n                  {workEdit === null ? \"Save\" : \"Update\"}\r\n                </button>\r\n                &nbsp;&nbsp;\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={workEdit === null ? this.onClear : onCanelWorkEdit}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterName: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeFilter = (event)=> {\r\n    var name = event.target.name;\r\n    var value = event.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n  onSearch = ()=> {\r\n    this.props.onSearch(this.state.filterName);\r\n    this.setState({\r\n      filterName :\"\",\r\n    });\r\n  }\r\n  render() {\r\n\r\n    var {filterName} = this.state;\r\n    // var {onSearch} = this.props;\r\n    return (\r\n      <div className=\"Search\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            name=\"filterName\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Input key word...\"\r\n            value={filterName}\r\n            onChange={this.onChangeFilter}\r\n          />\r\n\r\n          <span className=\"input-group-btn\">\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.onSearch}>\r\n              <i className=\"fas fa-search mr-10\"></i>Search\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Sort extends Component {\r\n  render() {\r\n    var {onSort} = this.props;\r\n    return (\r\n      <div className=\"Sort\">\r\n        <div className=\"dropdown\">\r\n          <button\r\n            className=\"btn btn-primary dropdown-toggle\"\r\n            type=\"button\"\r\n            id=\"dropdownMenu1\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"true\"\r\n            \r\n          >\r\n            Sort\r\n            <i className=\"fas fa-caret-square-down ml-10\"></i>\r\n          </button>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n            <li onClick={()=>{onSort('name', 0)}}>\r\n              <a role=\"button\" className=\"sortSelected\">\r\n                <i className=\"fas fa-sort-alpha-up-alt mr-10\"></i>\r\n                Name A-Z\r\n              </a>\r\n            </li>\r\n            <li onClick={()=>{onSort('name', 1)}}>\r\n              <a role=\"button\" className=\"sortSelected\">\r\n                <i className=\"fas fa-sort-alpha-down-alt mr-10\"></i>\r\n                Name Z-A\r\n              </a>\r\n            </li>\r\n            <li role=\"separtor\" className=\"divider\"></li>\r\n            <li onClick={()=>{onSort('status', 0)}}>\r\n              <a role=\"button\">Stutus Active</a>\r\n            </li>\r\n            <li onClick={()=>{onSort('status', 1)}}>\r\n              <a role=\"button\">Stutus Hidden</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\n\r\nexport default class Control extends Component {\r\n  render() {\r\n    var {onSearch, onSort} = this.props;\r\n    return (\r\n      <div className='Control'>\r\n          \r\n        {/* Search */}\r\n        <div className=\"row mt-20\">\r\n          <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <Search onSearch={onSearch}/>\r\n          </div>\r\n\r\n          {/* Sort */}\r\n\r\n          <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n           <Sort onSort={onSort}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TaskItem extends Component {\r\n  componentWillMount() {\r\n    console.log('running....');\r\n  }\r\n  render() {\r\n    console.log(\"TaskItem\");\r\n    var { work, stt, onChangeStatus, onDeleteWork, onEditWork } = this.props;\r\n    return (\r\n      <tr className=\"TaskItem\">\r\n        <td>{stt + 1}</td>\r\n        <td>{work.name}</td>\r\n        <td className=\"text-center\">\r\n          {work.status ? (\r\n            <span\r\n              className=\"label label-success cs-point\"\r\n              onClick={() => {\r\n                onChangeStatus(work);\r\n              }}\r\n            >\r\n              Active\r\n            </span>\r\n          ) : (\r\n            <span\r\n              className=\"label label-danger cs-point\"\r\n              onClick={() => {\r\n                onChangeStatus(work);\r\n              }}\r\n            >\r\n              Hidden\r\n            </span>\r\n          )}\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            onClick={() => {\r\n              onEditWork(work);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-pencil-alt mr-5\"></i>Edit\r\n          </button>\r\n          &nbsp;&nbsp;\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              onDeleteWork(work);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-trash-alt mr-5\"></i>Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nexport default class TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterName: \"\",\r\n      filterStatus: 0, // 0 == all, 1 = active, 2 = hidden\r\n    };\r\n  }\r\n\r\n  onChangeFilter = (event) => {\r\n    var name = event.target.name;\r\n    var value = event.target.value;\r\n\r\n    this.props.onFilter(\r\n      name === \"filterName\" ? value : this.state.filterName,\r\n      name === \"filterStatus\" ? value : this.state.filterStatus\r\n    );\r\n    // muc dich la khi ben cha render lai thi van cap nhap duoc gia tri filter\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"TableView\");\r\n    var {filterName, filterStatus} = this.state;\r\n    var { listWork } = this.props;\r\n\r\n\r\n    // cach 2 search va checkbox\r\n    //  if(filterName !== \"\") {\r\n    //   listWork = listWork.filter((element)=>{\r\n    //     return element.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1;\r\n    //   });\r\n    // }\r\n    // console.log(listWork);\r\n    // filterStatus  = parseInt(filterStatus);\r\n    // if(filterStatus !== 0)  \r\n    //   listWork = listWork.filter((element)=>{\r\n    //     return element.status === (filterStatus === 1? true: false); \r\n    //   });\r\n    \r\n\r\n    var elementItems = listWork.map((element, index) => {\r\n      return (\r\n        <TaskItem\r\n          key={index}\r\n          work={element}\r\n          stt={index}\r\n          onChangeStatus={this.props.onChangeStatus}\r\n          onDeleteWork={this.props.onDeleteWork}\r\n          onEditWork={this.props.onEditWork}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TableView\">\r\n        <table className=\"table table-bordered table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center\">STT</th>\r\n              <th className=\"text-center\">Name</th>\r\n              <th className=\"text-center\">Status</th>\r\n              <th className=\"text-center\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td></td>\r\n              <td>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"filterName\"\r\n                  onChange={this.onChangeFilter}\r\n                  value = {this.state.filterName}\r\n                />\r\n              </td>\r\n\r\n              <td>\r\n                <select\r\n                  name=\"filterStatus\"\r\n                  className=\"form-control\"\r\n                  onChange={this.onChangeFilter}\r\n                  value = {this.state.filterStatus}\r\n                >\r\n                  <option value={0}>All</option>\r\n                  <option value={1}>Active</option>\r\n                  <option value={2}>Hidden</option>\r\n                </select>\r\n              </td>\r\n\r\n              <td></td>\r\n            </tr>\r\n\r\n            {elementItems}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport TaskForm from \"./component/TaskForm\";\nimport Control from \"./component/Control\";\nimport TableView from \"./component/TableView\";\nimport \"./css/style.css\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listWork: [],\n      isDisplayForm: false,\n      workEdit: null,\n      filter: {\n        name: \"\",\n        status: 0,\n      },\n      sort: {\n        sortBy: \"\",\n        sortType: null,\n      },\n    };\n  }\n\n  // duoc goi khi khi app component nay chay dau tien chi 1 la duy nhat\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem(\"listWork\")) {\n      this.setState({\n        listWork: JSON.parse(localStorage.getItem(\"listWork\")),\n      });\n    }\n  }\n\n  onChangeDisplayForm = () => {\n    this.setState({\n      isDisplayForm: !this.state.isDisplayForm,\n    });\n  };\n\n  onSave = (data) => {\n    // key: value cho data\n    data.id = this.generateID();\n    this.state.listWork.push(data);\n    this.setState({\n      listWork: this.state.listWork,\n    });\n\n    localStorage.setItem(\"listWork\", JSON.stringify(this.state.listWork));\n  };\n\n  onChangeStatus = (data) => {\n    var { listWork } = this.state;\n    var index;\n    for (var i in listWork) {\n      if (listWork[i].id === data.id) {\n        index = i;\n        break;\n      }\n    }\n    listWork[index].status = !listWork[index].status;\n    this.setState({\n      listWork: listWork,\n    });\n    localStorage.setItem(\"listWork\", JSON.stringify(this.state.listWork));\n  };\n\n  onDeleteWork = (data) => {\n    var { listWork } = this.state;\n    var index;\n    for (var i in listWork) {\n      if (listWork[i].id === data.id) {\n        index = i;\n        break;\n      }\n    }\n    listWork.splice(index, 1);\n    this.setState({\n      listWork: listWork,\n    });\n    console.log(\"ahihi\");\n    localStorage.setItem(\"listWork\", JSON.stringify(this.state.listWork));\n  };\n\n  onEditWork = (data) => {\n    this.setState({\n      isDisplayForm: true,\n      workEdit: data,\n    });\n    // console.log(data);\n  };\n\n  onCanelWorkEdit = () => {\n    this.setState({\n      workEdit: null,\n      isDisplayForm: false,\n    });\n  };\n\n  onUpdateWork = (data) => {\n    var { listWork } = this.state;\n    var index;\n    for (var i in listWork) {\n      if (listWork[i].id === data.id) {\n        index = i;\n        break;\n      }\n    }\n\n    listWork[index].name = data.name;\n    listWork[index].status = data.status;\n    console.log(data);\n    this.setState({\n      listWork: listWork,\n      workEdit: null,\n      isDisplayForm: false,\n    });\n    localStorage.setItem(\"listWork\", JSON.stringify(listWork));\n  };\n\n  onFilter = (filterName, filterStatus) => {\n    this.setState({\n      filter: {\n        name: filterName,\n        status: parseInt(filterStatus),\n      },\n    });\n  };\n\n  onSearch = (filterName) => {\n    this.setState({\n      filter: {\n        name: filterName,\n        status: this.state.filter.status,\n      },\n    });\n    // console.log(filterName);\n  };\n\n  onSort = (sortBy, sortType) => {\n    console.log(sortBy, sortType);\n    this.setState({\n      sort: {\n        sortBy: sortBy,\n        sortType: parseInt(sortType) === 0 ? true : false,\n      },\n    });\n  };\n  // onGenerateData = () => {\n  //   var value = [\n  //     {id: this.generateID(), name: 'Hoc HTML', status: true},\n  //     {id: this.generateID(), name: 'Hoc CSS', status: false},\n  //     {id: this.generateID(), name: 'Hoc PHP', status: true},\n  //     {id: this.generateID(), name: 'Hoc JavaScipts', status: false},\n  //   ];\n  //   this.setState({\n  //     listWork: value,\n  //   })\n  //   localStorage.setItem('listWork', JSON.stringify(value));\n  // };\n\n  // Chung minh state cung thay doi duoc nhuwng chang qua la no ko render ma thoi\n  // changeState = ()=> {\n\n  //   this.state.listWork[0].id = '0000';\n  //   console.log(this.state.listWork);\n  //   localStorage.setItem('listWork', this.state.listWork);\n  // }\n  s4() {\n    return Math.floor(1 + Math.random() * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  generateID() {\n    return (\n      this.s4() +\n      \" \" +\n      this.s4() +\n      this.s4() +\n      \" \" +\n      this.s4() +\n      this.s4() +\n      \" \" +\n      this.s4() +\n      this.s4() +\n      \" \" +\n      this.s4() +\n      this.s4() +\n      \" \" +\n      this.s4() +\n      this.s4() +\n      \" \" +\n      this.s4()\n    );\n  }\n  render() {\n    console.log(\"APP\");\n    var { listWork, filter, sort } = this.state;\n    if (filter.name !== \"\") {\n      listWork = listWork.filter((element) => {\n        return (\n          element.name.toLowerCase().indexOf(filter.name.toLowerCase()) !== -1\n        );\n      });\n    }\n    if (filter.status !== 0)\n      listWork = listWork.filter((element) => {\n        return element.status === (filter.status === 1 ? true : false);\n      });\n    if (sort.sortBy === \"status\") {\n      var fil_1 = listWork.filter((element) => {\n        return element.status === sort.sortType;\n      });\n\n      var fil_2 = listWork.filter((element) => {\n        return element.status !== sort.sortType;\n      });\n      listWork = fil_1.concat(fil_2);\n    } else {\n      if (sort.sortType === true)\n        listWork.sort((a, b) => {\n          if (a.name > b.name) return 1;\n          else if (a.name < b.name) return -1;\n          else return 0;\n        });\n      else\n        listWork.sort((a, b) => {\n          if (a.name > b.name) return -1;\n          else if (a.name < b.name) return 1;\n          else return 0;\n        });\n    }\n    var elementTaskForm = this.state.isDisplayForm ? (\n      <TaskForm\n        onChangeDisplayForm={this.onChangeDisplayForm}\n        onSave={this.onSave}\n        workEdit={this.state.workEdit}\n        onCanelWorkEdit={this.onCanelWorkEdit}\n        onUpdateWork={this.onUpdateWork}\n      />\n    ) : (\n      \"\"\n    );\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h1 className=\"mb-100\">Manager work</h1>\n          </div>\n\n          <div className=\"row\">\n            <div\n              className={\n                this.state.isDisplayForm\n                  ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\"\n                  : \"\"\n              }\n            >\n              {/* Form */}\n              {elementTaskForm}\n              {/* <TaskForm /> */}\n            </div>\n\n            <div\n              className={\n                !this.state.isDisplayForm\n                  ? \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n                  : \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n              }\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={\n                  this.state.workEdit === null\n                    ? this.onChangeDisplayForm\n                    : this.onCanelWorkEdit\n                }\n              >\n                <i className=\"fas fa-plus mr-10\"></i>Add work\n              </button>\n              {/* &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={this.changeState}\n              >\n                <i className=\"fas fa-plus mr-10\"></i>Change State\n              </button> */}\n\n              {/* Search and sort */}\n              <br />\n              <br />\n              <Control onSearch={this.onSearch} onSort={this.onSort} />\n              {/* LIST */}\n              <br />\n              <br />\n              <div className=\"row\">\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                  <TableView\n                    listWork={listWork}\n                    onChangeStatus={this.onChangeStatus}\n                    onDeleteWork={this.onDeleteWork}\n                    onEditWork={this.onEditWork}\n                    onFilter={this.onFilter}\n                    filter={this.state.filter}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}